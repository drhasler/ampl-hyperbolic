option randseed 0;
##
param n integer, > 0;
set V := 0..n-1;
set E within {V,V};
var x{V};
var y{V};
##
let n := 30;
param p := 0.2;
let E := {};
for {i in V, j in V} {
    if Uniform(0,1) < p then {
        let E := E union {(i,j)};
    }
}
for {i in V} {
    let x[i] := Uniform(0,1) - 0.5;
    let y[i] := Uniform(0,1) - 0.5;
}
##
print "# file generated by gen.run" > rndgraph.dat;
printf "param n := %d;\n", n >> rndgraph.dat;
printf "set E :=" >> rndgraph.dat;
for {(i,j) in E} {
    printf " (%d,%d)", i,j >> rndgraph.dat;
}
printf ";\n" >> rndgraph.dat;
printf "var x :=" >> rndgraph.dat;
for {i in V} {
    printf " %d %f", i,x[i] >> rndgraph.dat;
}
printf ";\n" >> rndgraph.dat;
printf "var y :=" >> rndgraph.dat;
for {i in V} {
    printf " %d %f", i,y[i] >> rndgraph.dat;
}
printf ";\n" >> rndgraph.dat;
